<?xml version="1.0" encoding="UTF-8" ?>

<Section xmlns="urn:com.io7m.structural:8:0"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         id="79cef67f-7c8e-4d49-86f1-e8bd9e25f884"
         title="Installation">

  <Subsection title="Overview">
    <Paragraph>
      The <Term type="package">idstore</Term> server package is available from the following sources:
    </Paragraph>
    <FormalItem title="Sources">
      <ListUnordered>
        <Item>
          <Link target="bfd06f1f-c785-4780-83c4-23a0c12f3010">Maven Central</Link>
        </Item>
        <Item>
          <Link target="8d8acfdb-ab75-42c8-a066-33b646e19eb5">Quay.io</Link>
        </Item>
      </ListUnordered>
    </FormalItem>
    <Paragraph>
      Regardless of the distribution method, the <Term type="package">idstore</Term> package will contain a command
      named <Term type="command">idstore</Term> that acts as the main entrypoint to all of the server and client
      functionality.
    </Paragraph>
  </Subsection>

  <Subsection title="PostgreSQL"
              id="c19831a6-1d7b-44c5-8145-af542e97e39a">
    <Paragraph>
      The <Term type="package">idstore</Term> server requires a
      <Link target="597de78a-82a1-49e0-960e-b2ca01ffb038">PostgreSQL</Link>
      server. The <Term type="package">idstore</Term> server will create the required tables and database objects on
      first startup, given the name of a running PostgreSQL database, and a PostgreSQL role and password.
    </Paragraph>
  </Subsection>

  <Subsection title="Maven Central"
              id="bfd06f1f-c785-4780-83c4-23a0c12f3010">
    <Paragraph>
      A distribution package can be found at
      <LinkExternal target="https://repo1.maven.org/maven2/com/io7m/idstore/com.io7m.idstore.main/${project.version}/com.io7m.idstore.main-${project.version}-distribution.zip">
        Maven Central</LinkExternal>.
    </Paragraph>
    <Paragraph>
      The <Term type="command">idstore</Term> command requires that a Java 21+ compatible JVM be accessible
      via <Term type="command">/usr/bin/env java</Term>.
    </Paragraph>
    <Paragraph>
      Verify the integrity of the distribution zip file:
    </Paragraph>
    <FormalItem title="Verify">
      <Verbatim><![CDATA[
$ gpg --verify com.io7m.idstore.main-${project.version}-distribution.zip.asc
gpg: assuming signed data in 'com.io7m.idstore.main-${project.version}-distribution.zip.asc'
gpg: Signature made Tue 28 Jun 2022 15:01:56 GMT
gpg:                using RSA key 3CCE59428B30462D10459909C5607DA146E128B8
gpg:                issuer "contact@io7m.com"
gpg: using pgp trust model
gpg: Good signature from "io7m.com (2022 maven-rsa-key) <contact@io7m.com>" [unknown]
]]></Verbatim>
    </FormalItem>
    <Paragraph>
      Unzip the zip file, and set up the environment appropriately. The <Term type="command">idstore</Term> command
      expects an environment variable named <Term type="variable">IDSTORE_HOME</Term>
      to be defined that points to the installation directory.
    </Paragraph>
    <FormalItem title="Extract">
      <Verbatim><![CDATA[
$ unzip com.io7m.idstore.main-${project.version}-distribution.zip
$ export IDSTORE_HOME=$(realpath idstore)
$ ./idstore/bin/idstore
idstore: usage: idstore [command] [arguments ...]
...
]]></Verbatim>
    </FormalItem>
  </Subsection>

  <Subsection title="OCI Images" id="8d8acfdb-ab75-42c8-a066-33b646e19eb5">
    <Subsection title="Quay.io">
      <Paragraph>
        <LinkExternal target="https://opencontainers.org/">OCI</LinkExternal> images are available
        from <LinkExternal target="https://quay.io/repository/io7mcom/idstore">Quay.io</LinkExternal>
        for use with <LinkExternal target="https://podman.io/">podman</LinkExternal> or
        <LinkExternal target="https://www.docker.com/">docker</LinkExternal>.
      </Paragraph>
      <FormalItem title="Podman/Docker">
        <Verbatim><![CDATA[$ podman pull quay.io/io7mcom/idstore:${project.version}
$ podman run quay.io/io7mcom/idstore:${project.version}
idstore: usage: idstore [command] [arguments ...]
...
]]></Verbatim>
      </FormalItem>
    </Subsection>
    <Subsection title="Health Checks">
      <Paragraph>
        The OCI image includes an <Term type="command">idstore-healthcheck</Term> command that makes a
        request to a health endpoint on the <Link target="f695a0a9-cec2-4db8-839d-e9eaaa8dace3">Admin API</Link>
        server. The command expects the server to be accessible on <Term type="expression">localhost</Term>
        inside the container, and requires that the <Term type="expression">IDSTORE_HEALTHCHECK_PORT</Term>
        environment variable be set to the port used by the Admin API. By default, the container sets
        <Term type="expression">IDSTORE_HEALTHCHECK_PORT</Term> to <Term type="expression">51000</Term> and
        therefore there is no need to set this variable manually if the server is configured with the default
        settings.
      </Paragraph>
      <Paragraph>
        This feature may only be available when running the image under
        <LinkExternal target="https://www.docker.com/">docker</LinkExternal> due to limitations in
        the OCI image specification. The functionality of the
        health check service can be used directly via
        the <Link target="ddd9f938-5941-405f-ba78-1f256b614759">Admin API</Link> or
        the <Link target="7ec91745-ba98-442f-9965-8db671a4a659">User API</Link>.
      </Paragraph>
      <FormalItem title="Health Example">
        <Verbatim><![CDATA[$ curl http://localhost:51000/health
OK]]></Verbatim>
      </FormalItem>
    </Subsection>
  </Subsection>

  <Subsection title="Running The Server">
    <Subsection title="Initialization">
      <Paragraph>
        Given an appropriate
        <Link target="c99d5d5d-769c-4616-8847-926b5d085270">configuration file</Link>
        in <Term type="expression">server.conf</Term>, it's necessary to tell
        <Term type="command">idstore</Term>
        to configure the database and create an
        <Link target="f3d98730-c3b1-4da7-8f82-94aa9c99d473">initial administrator</Link>:
      </Paragraph>
      <FormalItem title="Initialize">
        <Verbatim>
          <xi:include href="c-initial-admin-example.txt"
                      parse="text"/>
        </Verbatim>
      </FormalItem>
    </Subsection>

    <Subsection title="Running">
      <Paragraph>
        The server can now be run with <Term type="command">idstore server</Term>:
      </Paragraph>
      <FormalItem title="Run">
        <Verbatim>
          <xi:include href="c-server-example.txt"
                      parse="text"/>
        </Verbatim>
      </FormalItem>
      <Paragraph>
        The server <Term type="emphasis">does not</Term> fork into the background and is designed to be run under process
        supervision.
      </Paragraph>
    </Subsection>
  </Subsection>

  <Subsection title="Running The Shell">
    <Paragraph>
      Run <Term type="expression">idstore shell</Term> <LinkFootnote target="508acbe2-3c25-4454-a306-54929caa444c"/>.
    </Paragraph>
    <FormalItem title="Shell">
      <Verbatim>
        <xi:include href="c-shell-example.txt"
                    parse="text"/>
      </Verbatim>
    </FormalItem>
  </Subsection>

  <Subsection title="Database" id="597de78a-82a1-49e0-960e-b2ca01ffb038">
    <Subsection title="Overview">
      <Paragraph>
        The <Term type="package">idstore</Term> package uses
        <LinkExternal target="https://www.postgresql.org/">PostgreSQL</LinkExternal> for all persistent data.
      </Paragraph>
    </Subsection>
    <Subsection title="Roles">
      <Subsection title="Overview">
        <Paragraph>
          The <Term type="package">idstore</Term> package sets up multiple roles during database initialization. The
          configured roles have different degrees of privileges in order to allow, for example, external systems such as
          database metrics collectors read-only access to the database. All the defined rules are declared with
          the built-in PostgreSQL restrictions such as <Term type="constant">nocreatedb</Term>,
          <Term type="constant">nocreaterole</Term>, etc.
        </Paragraph>
        <Paragraph>
          During the startup of the <Term type="package">idstore</Term> server, the server will connect to the
          database using the <Link target="e6639080-328c-4695-a2a0-e155d0c39e0b">owner</Link> role and do any
          database table initialization and/or schema upgrades necessary. The server will then disconnect from
          the database, and then connect to the database again using the
          <Link target="5a4ee9ec-898c-4395-b158-17f7d998b6e1">worker</Link> role. The
          worker role is then used for normal operation of the server; if this role is somehow compromised,
          the role only has a limited ability to do any damage to the database, and cannot affect the
          <Link target="0610ec24-6507-4a19-9efe-f511c31ccc9a">audit log</Link> at all.
        </Paragraph>
      </Subsection>
      <Subsection title="Owner" id="e6639080-328c-4695-a2a0-e155d0c39e0b">
        <Paragraph>
          The <Term type="term">owner</Term> role is the role that owns the database and is permitted to create tables,
          create new roles, etc. This role is used by the <Term type="package">idstore</Term> package when creating
          the database during the first run of the server, and for upgrading database schemas later. Administrators
          are free to pick the name of the role, although it is recommended that the role be named
          <Term type="constant">idstore_install</Term> to make it clear as to the purpose of the role.
        </Paragraph>
        <Paragraph>
          If the <LinkExternal target="https://hub.docker.com/_/postgres/">PostgreSQL OCI image</LinkExternal> is used,
          it is common to have the image create this role automatically using the
          <Term type="constant">POSTGRES_USER</Term> and <Term type="constant">POSTGRES_PASSWORD</Term> variables:
        </Paragraph>
        <FormalItem title="Example">
          <Verbatim><![CDATA[
$ podman run \
  --name some-postgres \
  -e POSTGRES_USER=idstore_install \
  -e POSTGRES_PASSWORD=mysecretpassword \
  -d postgres
]]></Verbatim>
        </FormalItem>
      </Subsection>
      <Subsection title="Worker" id="5a4ee9ec-898c-4395-b158-17f7d998b6e1">
        <Paragraph>
          The <Term type="term">worker</Term> role is the role that is used for normal database operation. It is
          a role that has read/write access to all tables (except for the <Link
          target="0610ec24-6507-4a19-9efe-f511c31ccc9a">audit log</Link> which is restricted to
          being append-only), although it is not granted the ability to create new tables, drop tables, or do
          other schema manipulation. The role is always named <Term type="constant">idstore</Term>, and adminstrators
          are required to set a password for this role.
        </Paragraph>
      </Subsection>
      <Subsection title="Reader" id="45afd370-ac5d-44fa-a4f6-b636a3c6a349">
        <Paragraph>
          The <Term type="term">reader</Term> role is a role that is permitted read-only access to some of the
          database. It is effectively an optional role that can be used by various database metrics systems if
          required. If a password is not specified for the role in the server's configuration file, then logging
          in is not permitted at all.
        </Paragraph>
      </Subsection>
    </Subsection>
  </Subsection>

  <Subsection title="Mail" id="80273d86-63fe-461b-9d37-8181053636ac">
    <Paragraph>
      The <Term type="package">idstore</Term> package requires a working SMTP MTA. The MTA is used to send
      <Link target="0ad1864f-7eac-4700-ae06-66a4f0a3b97f">email</Link> to users.
    </Paragraph>
  </Subsection>

  <Footnote id="508acbe2-3c25-4454-a306-54929caa444c">
    If running under <Term type="package">podman</Term> or <Term type="package">docker</Term>, remember to use
    the <Term type="parameter">-i</Term> and <Term type="parameter">-t</Term> options.
  </Footnote>

</Section>
