<?xml version="1.0" encoding="UTF-8" ?>

<Section title="General"
         xmlns="urn:com.io7m.structural:8:0">

  <Subsection title="Potential Attack: API Resource Exhaustion">
    <Subsection title="Description">
      <Paragraph>
        An attacker with access to the APIs could send specially crafted messages designed to exhaust
        server resources during parsing/validation of the messages.
      </Paragraph>
    </Subsection>
    <Subsection title="Mitigation">
      <Paragraph>
        All APIs exposed by the <Term type="package">idstore</Term> server are defined using the
        <LinkExternal target="https://www.io7m.com/software/cedarbridge/">Cedarbridge</LinkExternal>
        protocol. Cedarbridge-based protocols have the following properties:
      </Paragraph>
      <FormalItem title="Cedarbridge Properties">
        <ListUnordered>
          <Item>
            Parsing and validation complexity is linear in the size of the parsed message. It is
            not possible to specify a message that will result in an exponentially complex parse.
            Additionally, the server currently places hard limits on message sizes from clients;
            <Term type="constant">1048576</Term> octets for commands, and
            <Term type="constant">1024</Term> octets for login requests.
          </Item>
          <Item>
            Cedarbridge protocols are very strongly-typed, operate under a closed-world
            assumption, and are immune to any kind of reflection-based deserialization vulnerabilities.
            Deserialization of messages cannot under any circumstances result in the deserialization of
            arbitrary objects.
          </Item>
          <Item>
            Parsing code generated by the Cedarbridge compiler does not preallocate any structures.
            It is not possible, therefore, for a specially-crafted message to result in the server
            performing a huge allocation based on an attacker-provided size value. If a message claims
            to provide a string that is <Term type="constant">4294967295</Term> octets long, the parser
            will attempt to consume <Term type="constant">4294967295</Term> octets one at a time. This
            requires an attacker to actually provide <Term type="constant">4294967295</Term> octets
            over the network, and the attacker will run into a hard request size limit before this
            completes.
          </Item>
        </ListUnordered>
      </FormalItem>
    </Subsection>
  </Subsection>

  <Subsection title="Potential Attack: Offline Brute Force">
    <Subsection title="Description">
      <Paragraph>
        An attacker managing to compromise the database of the <Term type="package">idstore</Term>
        server will have access to the hashed passwords of all users.
      </Paragraph>
    </Subsection>
    <Subsection title="Mitigation">
      <Paragraph>
        The <Term type="package">idstore</Term> server currently hashes all user passwords using
        <LinkExternal target="https://www.rfc-editor.org/rfc/rfc2898">PBKDF2</LinkExternal> with
        a SHA-256 HMAC, with a default configuration of <Term type="expression">100000</Term> rounds.
      </Paragraph>
    </Subsection>
  </Subsection>

  <Subsection title="Monitoring">
    <Subsection title="Overview">
      <Paragraph>
        All command execution in the <Term type="package">idstore</Term> server passes through a
        single code path that captures <LinkExternal target="https://opentelemetry.io/">OpenTelemetry</LinkExternal>
        traces. Administrators should write alerting rules in their metrics system of choice to watch for instances of
        the traces and metrics described here; they almost certainly indicate malicious behaviour.
      </Paragraph>
    </Subsection>
    <Subsection title="Security Policy Violations">
      <Paragraph>
        If an operation attempts to violate the server's various configured rate limits, an exception
        will be raised with an <Term type="expression">idstore.errorCode</Term> attribute set to
        <Term type="expression">error-security-policy-denied</Term>.
      </Paragraph>
    </Subsection>
    <Subsection title="Rate Limits">
      <Paragraph>
        If an operation attempts to violate the server's various configured rate limits, an exception
        will be raised with an <Term type="expression">idstore.errorCode</Term> attribute set to
        <Term type="expression">error-rate-limit-exceeded</Term>.
      </Paragraph>
    </Subsection>
  </Subsection>

</Section>
